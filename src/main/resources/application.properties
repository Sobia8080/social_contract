# \u8BBF\u95EE\u7AEF\u53E3
server.port=8080

# \u9875\u9762\u9ED8\u8BA4\u524D\u7F00\u76EE\u5F55
#spring.mvc.view.prefix=/WEB-INF/jsp/
#spring.view.prefix=/WEB-INF/jsp/
# \u54CD\u5E94\u9875\u9762\u9ED8\u8BA4\u540E\u7F00
#spring.mvc.view.suffix=.jsp
#spring.view.suffix=.jsp

#====== mysql\u7684\u6570\u636E\u5E93\u914D\u7F6E
#spring.datasource.url = jdbc:mysql://39.108.70.66:3306/background?characterEncoding=utf8
spring.datasource.url = jdbc:mysql://127.0.0.1:3306/website?characterEncoding=utf8
spring.datasource.username = root
#spring.datasource.password = xiaroot
spring.datasource.password = root

#====== druid \u8FDE\u63A5\u6C60
spring.datasource.type = com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.filters = stat
spring.datasource.maxActive = 20
spring.datasource.initialSize = 1
spring.datasource.maxWait = 60000
spring.datasource.minIdle = 1
spring.datasource.timeBetweenEvictionRunsMillis = 60000
spring.datasource.minEvictableIdleTimeMillis = 300000
spring.datasource.validationQuery = select 'x'
spring.datasource.testWhileIdle = true
spring.datasource.testOnBorrow = false
spring.datasource.testOnReturn = false
spring.datasource.poolPreparedStatements = true
spring.datasource.maxOpenPreparedStatements = 20  

#====== Redis\u914D\u7F6E
spring.redis.hostName=39.108.70.66
spring.redis.port=6379
spring.redis.password=xiaroot
# \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.pool.maxActive=100
# \u8FDE\u63A5\u6C60\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.pool.maxWait=-1
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5
spring.redis.pool.maxIdle=8
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5
spring.redis.pool.minIdle=5
# \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09
spring.redis.timeout=3000


#====== HttpClient\u8FDE\u63A5\u914D\u7F6E
# \u8FDE\u63A5\u8D85\u65F6\u6216\u5F02\u5E38\u91CD\u8BD5\u6B21\u6570
httpclient.config.retryTime=3  
# \u957F\u8FDE\u63A5\u4FDD\u6301\u65F6\u95F4\uFF0C\u5355\u4F4D\u4E3As
httpclient.config.keepAliveTime=30  
# \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570
httpclient.config.connMaxTotal=20  
httpclient.config.maxPerRoute=20  
# \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4\uFF0C\u5355\u4F4Dms
httpclient.config.connectTimeout=2000  
# \u8BF7\u6C42\u8D85\u65F6\u65F6\u95F4
httpclient.config.connectRequestTimeout=2000  
# sock\u8D85\u65F6\u65F6\u95F4
httpclient.config.socketTimeout=2000  
# \u8FDE\u63A5\u5B58\u6D3B\u65F6\u95F4\uFF0C\u5355\u4F4Ds
httpclient.config.timeToLive=60 


#\u914D\u7F6E\u65E5\u5FD7
logging.config=classpath:logback.xml

#\u00CE\u00C4\u00BC\u00FE\u00C9\u00CF\u00B4\u00AB\u00C5\u00E4\u00D6\u00C3
multipart.maxFileSize=50Mb
multipart.maxRequestSize=50Mb

#\u9650\u5236\u4E0A\u4F20\u6587\u4EF6\u5927\u5C0F
#spring.http.multipart.maxFileSize=300Mb
#spring.http.multipart.maxRequestSize=300Mb
