<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.social.mapper.activity.LockConfigMapper">

	<!--实体映射-->
	<resultMap id="BaseResultMap" type="com.social.entity.bean.activity.LockConfig">
		<!---->
		<id column="id" jdbcType="INTEGER" property="id" />
		<!---->
		<id column="lock_name" jdbcType="VARCHAR" property="lockName" />
		<!---->
		<id column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<!---->
		<id column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
	</resultMap>


	<!-- 通用的字段 -->
	<sql id="Base_Column_List">
		 id,	lock_name,	create_time,	update_time
	</sql>

	<!-- 根据对象的不为null的值作为条件进行查找，并且确定值找出一个值 -->
	<select id="selectOnlyOfSelective" resultMap="BaseResultMap" parameterType="com.social.entity.bean.activity.LockConfig">
		 SELECT
		 <include refid="Base_Column_List" />
		 FROM lock_config
		 WHERE 1 = 1 
			<if test="id != null">
				 and id = #{id, jdbcType=INTEGER}
			</if>
			<if test="lockName != null">
				 and lock_name = #{lockName, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				 and create_time = #{createTime, jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
				 and update_time = #{updateTime, jdbcType=TIMESTAMP}
			</if>

	</select>

	<!-- 根据对象的不为null的值作为条件进行查找 -->
	<select id="selectSelective" resultMap="BaseResultMap" parameterType="com.social.entity.bean.activity.LockConfig">
		 SELECT
		 <include refid="Base_Column_List" />
		 FROM lock_config
		 WHERE 1 = 1 
			<if test="id != null">
				 and id = #{id, jdbcType=INTEGER}
			</if>
			<if test="lockName != null">
				 and lock_name = #{lockName, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				 and create_time = #{createTime, jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
				 and update_time = #{updateTime, jdbcType=TIMESTAMP}
			</if>

	</select>

	<!-- 动态分页，筛选条件 - 默认为最新时间排序 -->
	<select id="selectPageSelective" resultMap="BaseResultMap" parameterType="com.social.entity.vo.page.PageVo" >
		 SELECT
		 <include refid="Base_Column_List" />
		 FROM lock_config
		 WHERE 1 = 1 
			<if test="pageVo.filtrate != null">
				<foreach item="value" index="key" collection="pageVo.filtrate.entrySet()" >
					 <if test="value != null and value != '' ">
						 and ${key} = #{value}
					 </if>
				</foreach>
			 </if>

			<if test="pageVo.likeFiltrate != null">
				<foreach item="value" index="key" collection="pageVo.likeFiltrate.entrySet()" >
					 <if test="value != null and value != '' ">
						 or ${key} like CONCAT('%',#{value},'%')
					 </if>
				</foreach>
			 </if>

			<!-- 排序字段 -->
			<if test="null != pageVo.orderField ">
				ORDER BY
				${pageVo.orderField}
				<!-- 排序规则 -->
				<choose>
					<when test="null != pageVo.orderingRule ">
					${pageVo.orderingRule}
					</when>
					<otherwise>
					DESC
					</otherwise>
				</choose>
			</if>

		LIMIT #{pageVo.curPageCountSize},#{pageVo.pageSize}
	</select>

	<!-- 根据对象的不为null的值作为条件进行查找 -->
	<select id="selectDataCountSize" resultType="java.lang.Integer">
		 SELECT
		 count(id)
		 FROM lock_config
		 WHERE 1 = 1 
		 <if test="condition != null">
			 <foreach item="value" index="key" collection="condition.entrySet()" >
					 <if test="value != null and value != '' ">
						 and ${key} = #{value}
					 </if>
			 </foreach>
		 </if>

			<if test="likeCondition != null">
				<foreach item="value" index="key" collection="likeCondition.entrySet()" >
					 <if test="value != null and value != '' ">
						 or ${key} like CONCAT('%',#{value},'%')
					 </if>
				</foreach>
			 </if>

	</select>

	<!-- 根据Id进行查询 -->
	<select id="selectOfId" resultMap="BaseResultMap" parameterType="com.social.entity.bean.activity.LockConfig">
		 SELECT
		 <include refid="Base_Column_List" />
		 FROM lock_config
		 WHERE 1 = 1 
		 <if test="id != null">
			 and id = #{id, jdbcType=INTEGER}
		 </if>

	</select>

	<!-- 根据多Id进行查询 -->
	<select id="selectOfIds" resultMap="BaseResultMap" parameterType="com.social.entity.bean.activity.LockConfig">
		 SELECT
		 <include refid="Base_Column_List" />
		 FROM lock_config
		 WHERE 1 = 1 
		 <if	test="ids != null and ids.size > 0">
			 and id in 
			 <foreach collection ="ids" item="id" index= "index" open="(" separator="," close=")">
				 #{id}
			 </foreach>
		 </if>

	</select>

	<!-- 根据Id范围进查询 -->
	<select id="selectOfIdScopes" resultMap="BaseResultMap" parameterType="com.social.entity.bean.activity.LockConfig">
		 SELECT
		 <include refid="Base_Column_List" />
		 FROM lock_config
		 WHERE 1 = 1 
		 <if test="lessId != null">
			 and id <![CDATA[ > ]]> #{lessId, jdbcType=INTEGER}
		 </if>
		 <if test="largeId != null">
			 and id <![CDATA[ < ]]> #{largeId, jdbcType=INTEGER}
		 </if>

	</select>

	<!-- 根据多条件值进行查询 -->
	<select id="selectSelectiveMany" resultMap="BaseResultMap" parameterType="com.social.entity.bean.activity.LockConfig">
		 SELECT
		 <include refid="Base_Column_List" />
		 FROM lock_config
		 WHERE 1 = 1 
		 <foreach collection ="batchField" item="bean" index= "index" >
			<if test="id != null">
				 and id = #{bean.id, jdbcType=INTEGER}
			</if>
			<if test="lockName != null">
				 and lock_name = #{bean.lockName, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				 and create_time = #{bean.createTime, jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
				 and update_time = #{bean.updateTime, jdbcType=TIMESTAMP}
			</if>

		 </foreach>

	</select>

	<!-- 根据条件进行查询去重 -->
	<select id="selectSelectiveOfDistince" resultMap="BaseResultMap" parameterType="com.social.entity.bean.activity.LockConfig">
		 SELECT
		 DISTINCT <include refid="Base_Column_List" />
		 FROM lock_config
		 WHERE 1 = 1 
			<if test="id != null">
				 and id = #{id, jdbcType=INTEGER}
			</if>
			<if test="lockName != null">
				 and lock_name = #{lockName, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				 and create_time = #{createTime, jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
				 and update_time = #{updateTime, jdbcType=TIMESTAMP}
			</if>

	</select>

	<!-- 根据多条件值进行去重查询 -->
	<select id="selectSelectiveManyOfDistince" resultMap="BaseResultMap" parameterType="com.social.entity.bean.activity.LockConfig">
		 SELECT
		 DISTINCT <include refid="Base_Column_List" />
		 FROM lock_config
		 WHERE 1 = 1 
		 <foreach collection ="batchField" item="bean" index= "index" >
			<if test="id != null">
				 and id = #{bean.id, jdbcType=INTEGER}
			</if>
			<if test="lockName != null">
				 and lock_name = #{bean.lockName, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				 and create_time = #{bean.createTime, jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
				 and update_time = #{bean.updateTime, jdbcType=TIMESTAMP}
			</if>

		 </foreach>

	</select>

	<!-- 根据对象中不为null的值进行删除 -->
	<delete id="deleteSelective" parameterType="com.social.entity.bean.activity.LockConfig">
		 DELETE FROM lock_config
		 WHERE 1 = 1 
			<if test="id != null">
				 and id = #{id, jdbcType=INTEGER}
			</if>
			<if test="lockName != null">
				 and lock_name = #{lockName, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				 and create_time = #{createTime, jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
				 and update_time = #{updateTime, jdbcType=TIMESTAMP}
			</if>
	</delete>

	<!-- 根据对象中不为null的值进行删除 -->
	<delete id="deleteSelectiveOfId" parameterType="com.social.entity.bean.activity.LockConfig">
		 DELETE FROM lock_config
		 WHERE 1 = 1 
		 <if test="id != null">
			 and id = #{id, jdbcType=INTEGER}
		 </if>

	</delete>
	<!-- 根据对象中不为null的值进行删除 -->
	<delete id="deleteSelectiveOfIds" parameterType="com.social.entity.bean.activity.LockConfig">
		 DELETE FROM lock_config
		 WHERE 1 = 1 
		 <if	test="ids != null and ids.size > 0">
			 and id in 
			 <foreach collection ="ids" item="id" index= "index" open="(" separator="," close=")">
				 #{id}
			 </foreach>
		 </if>

	</delete>


	<!-- 添加 （匹配有值的字段）-->
	<insert id="insertSelective" parameterType="com.social.entity.bean.activity.LockConfig">
		 INSERT INTO lock_config
		 <trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="id != null">
				 id,
			</if>
			<if test="lockName != null">
				 lock_name,
			</if>
			<if test="createTime != null">
				 create_time,
			</if>
			<if test="updateTime != null">
				 update_time
			</if>

		 </trim>
		 <trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="id!=null">
				 #{id},
			</if>
			<if test="lockName!=null">
				 #{lockName},
			</if>
			<if test="createTime!=null">
				 #{createTime},
			</if>
			<if test="updateTime!=null">
				 #{updateTime}
			</if>
		 </trim>
	</insert>

	 <!-- 批量添加数据，添加所有字段的数据-->
	 <insert id="batchInsert" parameterType="com.social.entity.bean.activity.LockConfig">
		 INSERT INTO lock_config(<include refid="Base_Column_List" />)
		 VALUES
		 <foreach collection ="batchField" item="bean" index= "index" separator =",">
			 (
				 #{bean.id},
				 #{bean.lockName},
				 #{bean.createTime},
				 #{bean.updateTime}
			 )
		</foreach >
	</insert>

	<!-- 批量添加数据，添加动态字段的数据，建议每次100条 -->
	<insert id="batchInsertSelective" parameterType="com.social.entity.bean.activity.LockConfig">
		 <foreach collection ="batchField" item="bean" index= "index" separator =",">
			 INSERT INTO lock_config
			 <trim prefix="(" suffix=")" suffixOverrides="," >
				<if test="bean.id != null">
					 id,
				</if>
				<if test="bean.lockName != null">
					 lock_name,
				</if>
				<if test="bean.createTime != null">
					 create_time,
				</if>
				<if test="bean.updateTime != null">
					 update_time
				</if>

			 </trim>
			 <trim prefix="values (" suffix=")" suffixOverrides="," >
				<if test="bean.id!=null">
					 #{bean.id},
				</if>
				<if test="bean.lockName!=null">
					 #{bean.lockName},
				</if>
				<if test="bean.createTime!=null">
					 #{bean.createTime},
				</if>
				<if test="bean.updateTime!=null">
					 #{bean.updateTime}
				</if>
			 </trim>
		</foreach >	</insert>

	<!-- 动态更新-->
	<update id="updateSelective" parameterType="com.social.entity.bean.activity.LockConfig">
		 UPDATE lock_config
 		 <set> 
			<if test="updateRecord != null and updateRecord.lockName != null">
				 lock_name = #{updateRecord.lockName},
			</if>
			<if test="updateRecord != null and updateRecord.createTime != null">
				 create_time = #{updateRecord.createTime},
			</if>
			<if test="updateRecord != null and updateRecord.updateTime != null">
				 update_time = #{updateRecord.updateTime}
			</if>

 		 </set>
		 WHERE 1 = 1 
			<if test="conditionRecord != null and conditionRecord.id != null">
				 and id = #{conditionRecord.id, jdbcType=INTEGER}
			</if>
			<if test="conditionRecord != null and conditionRecord.lockName != null">
				 and lock_name = #{conditionRecord.lockName, jdbcType=VARCHAR}
			</if>
			<if test="conditionRecord != null and conditionRecord.createTime != null">
				 and create_time = #{conditionRecord.createTime, jdbcType=TIMESTAMP}
			</if>
			<if test="conditionRecord != null and conditionRecord.updateTime != null">
				 and update_time = #{conditionRecord.updateTime, jdbcType=TIMESTAMP}
			</if>
	</update>


	<!-- 根据批量Id进行更新 -->
	<update id="batchUpdateOfIds" parameterType="com.social.entity.bean.activity.LockConfig">
		 UPDATE lock_config
 		 <set> 
			<if test="updateRecord != null and updateRecord.lockName != null">
				 lock_name = #{updateRecord.lockName},
			</if>
			<if test="updateRecord != null and updateRecord.createTime != null">
				 create_time = #{updateRecord.createTime},
			</if>
			<if test="updateRecord != null and updateRecord.updateTime != null">
				 update_time = #{updateRecord.updateTime}
			</if>

 		 </set>
		 WHERE 1 = 1 
			 <if	test="ids != null and ids.size > 0">
				 and id in 
				 <foreach collection ="ids" item="id" index= "index" open="(" separator="," close=")">
					 #{id}
				 </foreach>
			 </if>
	</update>


	<!-- 根据Id进行更新 -->
	<update id="updateSelectiveOfId" parameterType="com.social.entity.bean.activity.LockConfig">
		 UPDATE lock_config
 		 <set> 
			<if test="updateRecord != null and updateRecord.lockName != null">
				 lock_name = #{updateRecord.lockName},
			</if>
			<if test="updateRecord != null and updateRecord.createTime != null">
				 create_time = #{updateRecord.createTime},
			</if>
			<if test="updateRecord != null and updateRecord.updateTime != null">
				 update_time = #{updateRecord.updateTime},
			</if>

 		 </set>
		 WHERE 1 = 1 		 <if test="updateRecord != null and updateRecord.id != null">
			 and id = #{updateRecord.id, jdbcType=INTEGER}
		 </if>

	</update>


</mapper>